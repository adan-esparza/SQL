/* In this SQL, I'm querying a database in SQLite with multiple tables in it to quantify statistics about customer and order data. */

--How many orders were placed in January? 
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

--Select the customer account numbers for all the orders that were placed in February.
SELECT distinct customers.acctnum 
FROM BIT_DB.FebSales FebSales
JOIN BIT_DB.customers customers
ON FebSales.orderID = customers.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, MIN(price) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--What is the total revenue for each product sold in January?
SELECT distinct product, SUM(quantity)*price AS 'revenue' FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product
ORDER BY (SUM(quantity)*price);

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, quantity, SUM(quantity)*price AS 'revenue', location 
FROM BIT_DB.FebSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(customers.acctnum), AVG(FebSales.Quantity*FebSales.price)
FROM BIT_DB.FebSales FebSales
LEFT JOIN BIT_DB.customers customers
ON FebSales.orderID = customers.order_id
WHERE length(FebSales.orderID) = 6
AND FebSales.orderID <> 'Order ID'
AND FebSales.Quantity >2;

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
AND length(FebSales.orderID) = 6
AND FebSales.orderID <> 'Order ID'
GROUP BY product
ORDER BY (COUNT(quantity));

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).
SELECT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(JanSales.orderID) = 6
AND JanSales.orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) > 2;

--How many of each type of headphone were sold in February?
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;
